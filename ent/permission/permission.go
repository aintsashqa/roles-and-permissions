// Code generated by entc, DO NOT EDIT.

package permission

import (
	"time"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the permission type in the database.
	Label = "permission"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreationDate holds the string denoting the creation_date field in the database.
	FieldCreationDate = "creation_date"
	// FieldLastUpdateDate holds the string denoting the last_update_date field in the database.
	FieldLastUpdateDate = "last_update_date"
	// FieldMarkAsDeleteDate holds the string denoting the mark_as_delete_date field in the database.
	FieldMarkAsDeleteDate = "mark_as_delete_date"
	// EdgeRoles holds the string denoting the roles edge name in mutations.
	EdgeRoles = "roles"
	// Table holds the table name of the permission in the database.
	Table = "permissions"
	// RolesTable is the table that holds the roles relation/edge. The primary key declared below.
	RolesTable = "role_permissions"
	// RolesInverseTable is the table name for the Role entity.
	// It exists in this package in order to avoid circular dependency with the "role" package.
	RolesInverseTable = "roles"
)

// Columns holds all SQL columns for permission fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreationDate,
	FieldLastUpdateDate,
	FieldMarkAsDeleteDate,
}

var (
	// RolesPrimaryKey and RolesColumn2 are the table columns denoting the
	// primary key for the roles relation (M2M).
	RolesPrimaryKey = []string{"role_id", "permission_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
	// DefaultCreationDate holds the default value on creation for the "creation_date" field.
	DefaultCreationDate func() time.Time
	// DefaultLastUpdateDate holds the default value on creation for the "last_update_date" field.
	DefaultLastUpdateDate func() time.Time
	// UpdateDefaultLastUpdateDate holds the default value on update for the "last_update_date" field.
	UpdateDefaultLastUpdateDate func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
