// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/aintsashqa/roles-and-permissions/ent/role"
	"github.com/aintsashqa/roles-and-permissions/ent/schema"
	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	roleFields := schema.Role{}.Fields()
	_ = roleFields
	// roleDescName is the schema descriptor for name field.
	roleDescName := roleFields[1].Descriptor()
	// role.NameValidator is a validator for the "name" field. It is called by the builders before save.
	role.NameValidator = func() func(string) error {
		validators := roleDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// roleDescCreationDate is the schema descriptor for creation_date field.
	roleDescCreationDate := roleFields[2].Descriptor()
	// role.DefaultCreationDate holds the default value on creation for the creation_date field.
	role.DefaultCreationDate = roleDescCreationDate.Default.(func() time.Time)
	// roleDescLastUpdateDate is the schema descriptor for last_update_date field.
	roleDescLastUpdateDate := roleFields[3].Descriptor()
	// role.DefaultLastUpdateDate holds the default value on creation for the last_update_date field.
	role.DefaultLastUpdateDate = roleDescLastUpdateDate.Default.(func() time.Time)
	// role.UpdateDefaultLastUpdateDate holds the default value on update for the last_update_date field.
	role.UpdateDefaultLastUpdateDate = roleDescLastUpdateDate.UpdateDefault.(func() time.Time)
	// roleDescID is the schema descriptor for id field.
	roleDescID := roleFields[0].Descriptor()
	// role.DefaultID holds the default value on creation for the id field.
	role.DefaultID = roleDescID.Default.(func() uuid.UUID)
}
